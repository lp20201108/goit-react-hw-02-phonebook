{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","target","setState","value","handleSubmit","preventDefault","addContact","props","this","onSubmit","className","styles","contactForm","htmlFor","label","type","contactInput","placeholder","onChange","btn","Component","ContactListItem","id","handleRemove","contactListItem","onClick","btnRemove","ContactsList","visibleContacts","length","map","uuid","message","Filter","filter","inputFilter","App","contacts","contact","oldContactName","find","oldContactNumber","alert","prevState","item","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filterStr","toLowerCase","includes","getFilteredContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d93e802.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnRemove\":\"ContactListItem_btnRemove__3KzH1\",\"contactListItem\":\"ContactListItem_contactListItem__3cHRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__33Are\",\"inputFilter\":\"Filter_inputFilter__GEzZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__29wn_\",\"message\":\"ContactsList_message__2alUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__9P5wY\",\"root\":\"App_root__hXUuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__36UrG\",\"label\":\"ContactForm_label__3iY42\",\"contactInput\":\"ContactForm_contactInput__1uilL\",\"btn\":\"ContactForm_btn__1TA5a\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css'; \r\n\r\n\r\nclass ContactForm extends Component {\r\n\r\n \r\n\r\n    state = {\r\n        name: \"\",  \r\n        number: \"\",\r\n    }\r\n\r\n  handleChange = (event) => {\r\n    const name = event.target.name;\r\n    this.setState({ [name]: event.target.value });   \r\n    }\r\n    \r\n      \r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n        const { name,number } = this.state;\r\n        const { addContact } = this.props;\r\n        addContact(name,number);\r\n        this.setState({name: '', number:''})\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state; \r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={styles.contactForm}>\r\n                <label htmlFor=\"name\" className={styles.label}>\r\n                    Name\r\n                <input name=\"name\"\r\n                    type=\"text\"\r\n                     className={styles.contactInput}\r\n                    placeholder=\"insert name\"\r\n                    onChange={this.handleChange}\r\n                    value={name}\r\n                />\r\n                </label>  \r\n                <label htmlFor=\"number\" className={styles.label}>\r\n                    Number\r\n             <input name=\"number\"\r\n                type=\"text\"\r\n                className={styles.contactInput}\r\n                placeholder=\"insert number\"\r\n                onChange={this.handleChange}\r\n                value={number}\r\n                />\r\n                </label>\r\n          \r\n         <button type=\"submit\" className={styles.btn}>\r\n                    Add contact\r\n        </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\n\r\n\r\nconst ContactListItem = ({ id, name, number, handleRemove }) => {\r\n  \r\n  \r\n    return (\r\n        <li className={styles.contactListItem}>\r\n            <span className=\"contactName\">{name}</span> \r\n            <span className=\"contactNumber\"> {number}</span>\r\n             <button onClick={() =>\r\n               handleRemove(id)}\r\n               className={styles.btnRemove}>Delete</button>\r\n      </li>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  handleRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactListItem;\r\n","import React, { Profiler } from 'react'\r\nimport { uuid } from \"uuidv4\";\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport styles from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ visibleContacts, handleRemove }) => {\r\n    \r\n    if (!visibleContacts.length) {\r\n        return <p className={styles.message}>Phonebook is empty!</p>\r\n    }\r\n    return (\r\n       <ul className=\"contactsList\">\r\n         {visibleContacts.map(({id=uuid(), name, number}) => (\r\n             <ContactListItem\r\n                 key={id}\r\n                 id={id}\r\n                 name={name}\r\n                 number={number}\r\n                 handleRemove={handleRemove} />\r\n  ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactsList.propTypes = {\r\n    visibleContacts: PropTypes.array.isRequired,\r\n    handleRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({filter, handleChange}) => {\r\n   \r\n    return (\r\n        <label className={styles.label} >\r\n            Find contacts by name\r\n            <input\r\n          className={styles.inputFilter}\r\n          name=\"filter\"\r\n          type=\"text\"\r\n          placeholder=\"search contact\"\r\n          onChange={handleChange}\r\n          value={filter}\r\n            />\r\n    </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport ContactForm from './ContactForm';\nimport ContactsList from \"./ContactsList\";\nimport Filter from \"./Filter/Filter\";\nimport  styles from './App.module.css';\n\n\n\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n      filter: '',\n  }\n  \n\n\n  componentDidMount() {\n    const contacts=  localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    // console.log(parsedContacts);\n    if(parsedContacts)\n   { this.setState({ contacts: parsedContacts });}\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n  \n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n}\n\n\n\n  addContact = (name, number) => {\n\n       const contact = {\n      id: uuid(), \n      name,\n      number,\n    }\n    \n    const oldContactName = this.state.contacts.find(contact =>\n    contact.name === name);\n    \n    const oldContactNumber= this.state.contacts.find(contact =>contact.number === number);\n        \n    if (oldContactName) {\n      alert(`This contact NAME already exists as Name:${oldContactName.name} Tel:${oldContactName.number}` );\n      return;\n    } else if(oldContactNumber) {\n      alert(`This contact NUMBER already exists as  Tel:${oldContactNumber.number} Name:${oldContactNumber.name}` );\n      return;\n    }\n    else if (!name.length) {\n      alert('Please, enter the contact name');\n     \n    } else if (!number.length) {\n       alert('Please, enter the contact number');\n    }\n      \n    else {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  }\n  }\n   \n  handleRemove = (id) => {\n    this.setState((prevState) => {\n      const contacts = prevState.contacts.filter((item) => item.id !== id);\n      return {\n        contacts,\n      }\n    })\n  };\n  \n    handleChange = (event) => {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });   \n    }\n\n    getFilteredContacts(contacts, filterStr){\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterStr.toLowerCase())\n    );\n  }\n\n\n  render() {\n    const { contacts, filter} = this.state;\n    const visibleContacts = this.getFilteredContacts(contacts, filter)\n  \n    return (\n      <>\n      <div className={styles.container} >\n          <h1 className=\"titlePhonebook\">Phonebook</h1>\n       <ContactForm addContact={ this.addContact}/>\n      <h2 className=\"title\">Contacts</h2>\n      <Filter filter={this.state.filter} handleChange={this.handleChange}  />\n      <ContactsList visibleContacts={visibleContacts} handleRemove={ this.handleRemove}/>    \n        </div>\n     </>\n    )\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}